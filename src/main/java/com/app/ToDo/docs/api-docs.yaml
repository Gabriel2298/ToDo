{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI definition",
    "version": "v0"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Generated server url"
    }
  ],
  "tags": [
    {
      "name": "task-controller",
      "description": "Controller class for handling tasks."
    }
  ],
  "paths": {
    "/api/{tasksId}": {
      "put": {
        "tags": [
          "task-controller"
        ],
        "summary": "Updates an existing task based on the provided task details and the task ID.",
        "description": "Updates an existing task based on the provided task details and the task ID.",
        "operationId": "updateTasks",
        "parameters": [
          {
            "name": "tasksId",
            "in": "path",
            "description": "the ID of the task to be updated",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "the TasksDto object containing the updated details of the task",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TasksDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "a ResponseEntity containing the updated TasksDto object and HTTP status code",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TasksDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{userId}": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "summary": "Retrieves user details based on the provided user ID.",
        "description": "Retrieves user details based on the provided user ID.",
        "operationId": "getUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "the ID of the user to be retrieved",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "a ResponseEntity containing the UserDto object with the user's details",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "user-controller"
        ],
        "summary": "Updates an existing user's details based on the provided UserDto object and userId.",
        "description": "Updates an existing user's details based on the provided UserDto object and userId.",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "the ID of the user to be updated",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "the UserDto object containing updated information about the user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "a ResponseEntity containing the updated UserDto object",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "user-controller"
        ],
        "summary": "Deletes a user based on the provided user ID.",
        "description": "Deletes a user based on the provided user ID.",
        "operationId": "deletedUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "the ID of the user to be deleted",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "a ResponseEntity containing a confirmation message indicating successful deletion",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/login": {
      "post": {
        "tags": [
          "user-controller"
        ],
        "summary": "Authenticates a user based on the provided login credentials.",
        "description": "Authenticates a user based on the provided login credentials.",
        "operationId": "userLogin",
        "requestBody": {
          "description": "the LoginBody object containing the email and password for the user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "a ResponseEntity containing the authenticated UserDto object if successful,\n         or an unauthorized status if authentication fails",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "summary": "Retrieves all users.",
        "description": "Retrieves all users.",
        "operationId": "getAllUsers",
        "responses": {
          "200": {
            "description": "a ResponseEntity containing an iterable collection of UserDto objects representing all users",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "user-controller"
        ],
        "summary": "Creates a new user using the provided UserDto object.",
        "description": "Creates a new user using the provided UserDto object.",
        "operationId": "createUser",
        "requestBody": {
          "description": "the UserDto object containing the details of the user to be created",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "a ResponseEntity containing the created UserDto object",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/tasks": {
      "post": {
        "tags": [
          "task-controller"
        ],
        "summary": "Creates a new task for a specific user.",
        "description": "Creates a new task for a specific user.",
        "operationId": "createTasks",
        "parameters": [
          {
            "name": "userIdentifier",
            "in": "query",
            "description": "the ID of the user for whom the task is created",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "the TasksDto object containing the details of the task to be created",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TasksDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "a ResponseEntity containing the created TasksDto object and HTTP status code",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TasksDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/{userId}": {
      "get": {
        "tags": [
          "task-controller"
        ],
        "summary": "Retrieves the list of tasks associated with a specific user.",
        "description": "Retrieves the list of tasks associated with a specific user.",
        "operationId": "getTasksByUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "the ID of the user whose tasks are being retrieved",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "a ResponseEntity containing a list of TasksDto objects for the specified user and an HTTP status code",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TasksDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/{id}/delete": {
      "get": {
        "tags": [
          "task-controller"
        ],
        "summary": "Deletes a task based on the provided task ID.",
        "description": "Deletes a task based on the provided task ID.",
        "operationId": "deleteTask",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "a ResponseEntity containing an ApiRes object with a success message and HTTP status code",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRes"
                }
              }
            }
          }
        }
      }
    },
    "/api/": {
      "get": {
        "tags": [
          "task-controller"
        ],
        "summary": "Retrieves the list of all tasks.",
        "description": "Retrieves the list of all tasks.",
        "operationId": "getTasks",
        "responses": {
          "200": {
            "description": "a ResponseEntity containing a list of TasksDto objects and an HTTP status code",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TasksDto"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Task": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TasksDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "userDto": {
            "$ref": "#/components/schemas/UserDto"
          },
          "description": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Task"
            }
          }
        }
      },
      "UserDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "age": {
            "type": "integer",
            "format": "int32"
          },
          "registrationDate": {
            "type": "string",
            "format": "date"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "userName": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Task"
            }
          }
        }
      },
      "LoginBody": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "ApiRes": {
        "type": "object",
        "properties": {
            "message": {
              "type": "string"
            },
            "success": {
              "type": "boolean"
            }
          }
      }
    }
  }
}